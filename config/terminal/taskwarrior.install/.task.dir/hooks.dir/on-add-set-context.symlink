#!/bin/sh

# helper functions
abort() {
	printf '%s' "$new_task"
	exit 0
}

# https://unix.stackexchange.com/q/397916/153926
repl() {
	local pattern=$(printf '%s\n' "$1" | sed 's:[][\/.^$*]:\\&:g') 
	local replace=$(printf '%s\n' "$2" | sed 's:[\/&]:\\&:g;$!s/$/\\/')
	sed "s/$pattern/$replace/g"
}

replace() {
	printf '%s' "$1" | repl "$2" "$3"
}

add_tag() {
	new_tags=$(replace   "$new_tags"   "]"   ",\"$1\"]")
}

parse_ctx() {
	while [ "$#" -ge "1" ]; do
		case "$1" in
			"+"*)
				tag=$(printf '%s' "$1" | cut -c2-)
				add_tag "$tag"
				echo "set-context hook automatically added tag $tag"
				;;
			"or")
				echo "Add-hook 'set-context' does not support 'or'"
				abort
				;;
		esac
		shift
	done
}

read -r new_task

ctx_name=$(task _show | grep "context=" | sed 's/^[^=]*=//')
if [ -z "$ctx_name" ]; then
	abort
fi

ctx=$(task _show | grep "context.$ctx_name=" | sed 's/^[^=]*=//')
if [ -z "$ctx" ]; then
	abort
fi

# variables for add tags
old_tags=$(printf '%s' "$new_task" | grep -Po '"tags":[^]]*]' )
new_tags=${old_tags:-[]}

# parse context
parse_ctx $ctx

# fix tags
new_tags=$(replace   "$new_tags"   "[,"   "[" )

# update json
if [ -n "$old_tags" ]; then
	new_task=$(replace   "$new_task"   "\"$old_tags\""   "\"$new_tags\"")
else 
	new_task=$(replace   "$new_task"   ",\"uuid\":"   ",\"tags\":$new_tags,\"uuid\":")
fi

printf '%s' "$new_task"
exit 0


